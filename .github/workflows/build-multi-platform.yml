name: Build on multiple platforms

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    permissions:
      id-token: write
      attestations: write

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: jurplel/install-qt-action@v4
        with:
          version: 6.8.2
          cache: true

      - uses: actions/setup-go@v5
        with:
          go-version: "^1.24.0"

      - name: Install Linux dependencies
        if: startsWith( matrix.os, 'ubuntu' )
        run: |
          sudo apt-get install -y \
            ninja-build \
            libglvnd-dev \
            libsecret-1-dev \
            linux-libc-dev \
            pkg-config

      - name: Install Windows dependencies
        if: startsWith( matrix.os, 'windows' )
        shell: powershell
        run: choco install -y zip ninja

      - name: Install macOS dependencies
        if: startsWith( matrix.os, 'macos' )
        run: brew install zip ninja

      - name: Retrieve vcpkg commit hash
        id: cache_info
        shell: bash
        run: |
          mkdir -p .cache
          echo "vcpkg_commit=$(git -C ./extern/vcpkg rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "vcpkg_cache_dir=$(realpath .cache)" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: |
            .cache/
            extern/vcpkg/installed
            extern/vcpkg/downloads
            extern/vcpkg/scripts/buildsystems/vcpkg.cmake
          key: vcpkg-${{ matrix.os }}-${{ steps.cache_info.outputs.vcpkg_commit }}-${{ steps.cache_info.outputs.timestamp }}
          restore-keys: |
            vcpkg-${{ matrix.os }}-
            vcpkg-${{ matrix.os }}-${{ steps.cache_info.outputs.vcpkg_commit }}-

      - name: Build
        id: build
        env:
          MSYSTEM: ""
          VCPKG_DEFAULT_BINARY_CACHE: ${{ steps.cache_info.outputs.vcpkg_cache_dir }}
          VCPKG_BUILD_TYPE: Release
        run: make build

      - name: Report build failure
        if: failure()
        shell: bash
        run: |
          if [ -f './extern/vcpkg/installed/vcpkg/issue_body.md' ]; then
            cat './extern/vcpkg/installed/vcpkg/issue_body.md' >> $GITHUB_STEP_SUMMARY
          else
            echo "::error:: Build failed without any error message"
          fi

      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: "bridge*.tgz"

      - uses: actions/upload-artifact@v4
        with:
          path: "bridge*.tgz"
          name: build-${{ matrix.os }}
